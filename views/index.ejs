<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Job Application Tracker</title>
    <link rel="stylesheet" href="/index.css"> 
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@100..900&family=Space+Grotesk:wght@300..700&display=swap" rel="stylesheet">
</head>
<body>
    <nav>
        <ul>
            <li><a href="/">Home</a></li>
            <li><a href="/index">Application Tracker</a></li>
        </ul>
    </nav>    

    <h1>Job Application Tracker</h1>

    <button onclick="window.location.reload();">Refresh Data</button>
    <button onclick="addApplication()" class="add-btn">âž• Add New Job</button>

    <table>
        <thead>
            <tr>
                <th>Company</th>
                <th>Position</th>
                <th>Status</th>
                <th>Date Applied</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <% applications.forEach(job => { %>
            <tr id="row-<%= job.id %>">
                <td><%= job.company %></td>
                <td><%= job.position %></td>
                <td><%= job.status %></td>
                <td><%= new Date(job.applied_on).toDateString() %></td>
                <td>
                    <button class="edit-btn" onclick="editApplication(<%= job.id %>)">Edit</button>
                    <button class="delete-btn" onclick="deleteApplication(<%= job.id %>)">Delete</button>
                </td>
            </tr>
            <% }); %>
        </tbody>
    </table>

    <script>
        async function deleteApplication(id) {
            if (confirm('Are you sure you want to delete this application?')) {
                try {
                    const response = await fetch(`/applications/${id}`, { method: 'DELETE' });
                    const result = await response.json();
                    alert(result.message);
                    document.getElementById(`row-${id}`).remove();
                } catch (error) {
                    console.error('Error deleting application:', error);
                    alert('Failed to delete application.');
                }
            }
        }

        async function editApplication(id) {
            const newCompany = prompt('Enter new company name:');
            const newPosition = prompt('Enter new position:');
            const newStatus = prompt('Enter new status:');
            const newDate = prompt('Enter new applied date (YYYY-MM-DD):');

            if (newCompany && newPosition && newStatus && newDate) {
                try {
                    const response = await fetch(`/applications/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            company: newCompany,
                            position: newPosition,
                            status: newStatus,
                            applied_on: newDate
                        })
                    });

                    const result = await response.json();
                    alert(result.message);
                    location.reload();
                } catch (error) {
                    console.error('Error updating application:', error);
                    alert('Failed to update application.');
                }
            }
        }

        async function addApplication() {
            const company = prompt('Enter company name:');
            const position = prompt('Enter job position:');
            const status = prompt('Enter job status (Pending, Accepted, Rejected):');
            const applied_on = prompt('Enter application date (YYYY-MM-DD):');

            if (company && position && status && applied_on) {
                try {
                    const response = await fetch('/applications', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                            company,
                            position,
                            status,
                            applied_on
                        })
                    });

                    const result = await response.json();
                    alert(result.message);
                    location.reload();
                } catch (error) {
                    console.error('Error adding application:', error);
                    alert('Failed to add application.');
                }
            }
        }
    </script>
</body>
</html>
